import{_ as n,V as s,W as a,a0 as t}from"./framework-a5ccf766.js";const p={},e=t(`<h1 id="vue" tabindex="-1"><a class="header-anchor" href="#vue" aria-hidden="true">#</a> Vue</h1><h2 id="vue3-父组件使用子组件的函数" tabindex="-1"><a class="header-anchor" href="#vue3-父组件使用子组件的函数" aria-hidden="true">#</a> vue3 父组件使用子组件的函数</h2><p><strong>refs 可以拿到子组件的对象</strong></p><p><strong>子组件需要return暴露出去</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span>  <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ Component }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>keep-alive</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Component<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>keep-alive</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1.父组件</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>	    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
			父组件
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>changeChild<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>改变子组件函数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>child<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>子组件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Child</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
		<span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
		<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
			<span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
				<span class="token keyword">const</span> changeChild<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					child<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">changeShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">return</span><span class="token punctuation">{</span>changeChild<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.子组件</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
			子组件
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
		<span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
		<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
			<span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">const</span> show <span class="token operator">=</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
				<span class="token keyword">const</span> <span class="token function-variable function">changeShow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
					show<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">return</span><span class="token punctuation">{</span>show<span class="token punctuation">,</span>changeShow<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vue父子组件-生命周期执行顺序" tabindex="-1"><a class="header-anchor" href="#vue父子组件-生命周期执行顺序" aria-hidden="true">#</a> vue父子组件, 生命周期执行顺序</h2><p>挂载阶段:</p><p>父<code>beforeCreate</code>--&gt;父<code>created</code>--&gt;子<code>beforeCreate</code>--&gt;子<code>created</code>--&gt;子<code>beforeMount</code>--&gt;子<code>mounted</code>--&gt;父<code>mounted</code></p><p>更新阶段:</p><p>父<code>beforeUpdate</code>--&gt;子<code>beforeUpdate</code>--&gt;子<code>updated</code>--&gt;父<code>updated</code></p><p>销毁阶段:</p><p>父<code>beforeDestroy</code>--&gt;子<code>beforeDestroy</code>--&gt;子<code>destroyed</code>--&gt;父<code>destroyed</code></p><p>规律就是：父组件先开始执行，然后等到子组件执行完，父组件收尾。</p><h2 id="vue3-子组件向父组件传递值" tabindex="-1"><a class="header-anchor" href="#vue3-子组件向父组件传递值" aria-hidden="true">#</a> vue3 子组件向父组件传递值</h2><p><strong>子组件<code>child.vue</code></strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
			子组件
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>send<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>发送<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
		<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
			<span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>emit<span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">const</span> show <span class="token operator">=</span> <span class="token boolean">false</span>
				<span class="token keyword">const</span> <span class="token function-variable function">send</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
					<span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;sendFather&#39;</span><span class="token punctuation">,</span>show<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">return</span><span class="token punctuation">{</span>send<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>父组件 <code>father.vue</code></strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
			父组件
			<span class="token comment">&lt;!--@sendFather是子组件中定义的方法--emit(&#39;sendFather&#39;,show)， &quot;sendFather&quot;是父组件定义接受的函数 --&gt;</span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Child</span> <span class="token attr-name">@sendFather</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sendFather<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Child</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
		<span class="token keyword">import</span> Child form child<span class="token punctuation">.</span>vue
		<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{</span>Child<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>emit<span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">const</span> <span class="token function-variable function">sendFather</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
					<span class="token comment">// value 是子组件传递过来的</span>
					console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">return</span> <span class="token punctuation">{</span>sendFather<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在项目中遇到问题" tabindex="-1"><a class="header-anchor" href="#在项目中遇到问题" aria-hidden="true">#</a> 在项目中遇到问题</h2><ol><li><p>出现 <code> TypeError: Cannot read properties of undefined (reading &#39;deep&#39;)</code></p><blockquote><p>错误记录：此错误由vue3.0报出， 使用了未注册的指令</p></blockquote><p>如：在login.vue中的登录按钮使用了 <code>v-ware</code> 指令，而没有在<code>main.js</code> 声明注册</p></li></ol>`,24),o=[e];function c(l,u){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","vue.html.vue"]]);export{d as default};
