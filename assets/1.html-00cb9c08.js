import{_ as a,V as t,W as e,X as n,Y as s,a0 as p}from"./framework-a5ccf766.js";const o={},c=n("h1",{id:"axios-ajax",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#axios-ajax","aria-hidden":"true"},"#"),s(" Axios&Ajax")],-1),i=n("h2",{id:"axios请求传递请求头",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#axios请求传递请求头","aria-hidden":"true"},"#"),s(" Axios请求传递请求头")],-1),l=n("blockquote",{"store.state.user.authorization":""},[n("p",null,"config.headers['Authorization'] = Bearer $")],-1),r=p(`<p>在<code>request.js</code>中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>	<span class="token comment">// 请求前的统一处理 拦截请求函数</span>
	instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
		<span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token comment">// JWT鉴权处理</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>authorization<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				config<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;Authorization&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>authorization<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
			<span class="token punctuation">}</span>
			<span class="token keyword">return</span> config
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token comment">// for debug</span>
			<span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="跨域问题" tabindex="-1"><a class="header-anchor" href="#跨域问题" aria-hidden="true">#</a> 跨域问题</h2><p><code>vite.config.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token string">&#39;8000&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&#39;/api&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;http://121.43.163.227:9001&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 凡是遇到 /api 路径的请求，都映射到 target 属性 目标地址</span>
                    <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否跨域</span>
                    <span class="token function-variable function">rewrite</span><span class="token operator">:</span> <span class="token parameter">path</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/api</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>request.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> baseURL <span class="token operator">=</span> <span class="token string">&#39;/api&#39;</span>

<span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    baseURL<span class="token punctuation">,</span>
    <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">5000</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),u=[c,i,l,r];function d(k,v){return t(),e("div",null,u)}const b=a(o,[["render",d],["__file","1.html.vue"]]);export{b as default};
