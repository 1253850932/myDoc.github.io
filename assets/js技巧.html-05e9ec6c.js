import{_ as n,V as s,W as a,a0 as t}from"./framework-a5ccf766.js";const p={},e=t(`<h1 id="js-技巧" tabindex="-1"><a class="header-anchor" href="#js-技巧" aria-hidden="true">#</a> JS 技巧</h1><h2 id="_1-字符串转对象" tabindex="-1"><a class="header-anchor" href="#_1-字符串转对象" aria-hidden="true">#</a> 1. 字符串转对象</h2><p><code> let str = &#39;id=10&amp;name=小明&amp;age=18&#39;</code> 转化成 对象</p><ol><li>字符串按&amp;拆分，返回一个数组 <code>[ &#39;id=10&#39;, &#39;name=小明&#39;, &#39;age=18&#39; ]</code></li><li>遍历数组，再把每个字符串用 = 拆分 <code>id=10,name=小明,age=18</code>--&gt;<code>[ &#39;id&#39;, &#39;10&#39; ],[ &#39;name&#39;, &#39;小明&#39; ],[ &#39;age&#39;, &#39;18&#39; ]</code></li><li>下班 0 作为空对象的 key 值</li><li>下表 1 作为空对象的 value 值</li><li>遍历结束后，即可转换成功<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;id=10&amp;name=小明&amp;age=18&#39;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&amp;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;=&#39;</span><span class="token punctuation">)</span>
  obj<span class="token punctuation">[</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_2-对象转字符串" tabindex="-1"><a class="header-anchor" href="#_2-对象转字符串" aria-hidden="true">#</a> 2.对象转字符串</h2><ol><li>forin 遍历对象</li><li>字符串拼接</li><li>截取字符串，取出最后一个&amp;</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;小面&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">16</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  str <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> str<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),o=[e];function c(i,l){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","js技巧.html.vue"]]);export{u as default};
