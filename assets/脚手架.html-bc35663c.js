import{_ as n,V as s,W as a,a0 as t}from"./framework-a5ccf766.js";const p={},e=t(`<h1 id="脚手架" tabindex="-1"><a class="header-anchor" href="#脚手架" aria-hidden="true">#</a> 脚手架</h1><h2 id="自动注册全局组件" tabindex="-1"><a class="header-anchor" href="#自动注册全局组件" aria-hidden="true">#</a> 自动注册全局组件</h2><ol><li>VueCli</li></ol><blockquote><p>扩展vue原有的功能：全局组件，自定义指令，挂载原型方法，注意：没有全局过滤器。</p></blockquote><ul><li>vue3.0插件写法要素：导出一个对象，有install函数，默认传入了app应用实例，app基础之上扩展</li><li>import XtxMore from &#39;./xtx-more.vue&#39;</li><li>导入library文件夹下的所有组件</li><li>批量导入需要使用一个函数 require.context(dir,deep,matching)</li><li>参数：1. 目录 2. 是否加载子目录 3. 加载的正则匹配</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> importFn <span class="token operator">=</span> require<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token string">&#39;./&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>
	<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
		<span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token comment">//在app上进行扩展，	app提供component directive 函数</span>
			<span class="token comment">//如果要挂载原型，app.config.globalProperties 方式</span>
			<span class="token comment">// 批量注册全局组件</span>
			 importFn<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token comment">// 导入组件</span>
				<span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token function">importFn</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span>default
				<span class="token comment">// 注册组件</span>
				app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>component<span class="token punctuation">.</span>name<span class="token punctuation">,</span> component<span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
			  <span class="token comment">// 自定义指令</span>
			<span class="token function">defineDirective</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span>
			app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$message <span class="token operator">=</span> Message
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p>vite</p><blockquote><p>使用 <code>i<wbr>mport.meta.glob()</code></p></blockquote><ul><li>i<wbr>mport.meta.glob()</li><li>i<wbr>mport.meta.globEager()</li></ul></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token keyword">import</span> <span class="token punctuation">{</span> defineAsyncComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
  	<span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">glob</span><span class="token punctuation">(</span><span class="token string">&#39;../library/*.vue&#39;</span><span class="token punctuation">)</span>
  	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>components<span class="token punctuation">)</span>
  	<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>components<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  			<span class="token keyword">const</span> name <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> key<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
  			app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token function">defineAsyncComponent</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
  		<span class="token punctuation">}</span>
  	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>使用<code>unplugin-vue-components</code>插件</p></blockquote><p>放在 src/components 文件夹里面</p><p><code>npm i unplugin-vue-components</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Components <span class="token keyword">from</span> <span class="token string">&#39;unplugin-vue-components/vite&#39;</span>

  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
 		<span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 		<span class="token function">viteMockServe</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 			<span class="token literal-property property">mockPath</span><span class="token operator">:</span> <span class="token string">&#39;mock&#39;</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">localEnabled</span><span class="token operator">:</span> command <span class="token operator">===</span> <span class="token string">&#39;serve&#39;</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">prodEnabled</span><span class="token operator">:</span> command <span class="token operator">!==</span> <span class="token string">&#39;serve&#39;</span> <span class="token operator">&amp;&amp;</span> prodMock<span class="token punctuation">,</span>
 			<span class="token literal-property property">watchFiles</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">injectCode</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
 			import { setupProdMockServer } from &#39;../mockProdServer&#39;;
 			setupProdMockServer();
 			</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
 			<span class="token literal-property property">logger</span><span class="token operator">:</span> <span class="token boolean">true</span>
 		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 		<span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 			<span class="token literal-property property">dirs</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;src/components/library&#39;</span><span class="token punctuation">]</span>
 		<span class="token punctuation">}</span><span class="token punctuation">)</span>
 	<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","脚手架.html.vue"]]);export{r as default};
