const n=JSON.parse(`{"key":"v-6a05d473","path":"/note/ajax/1.html","title":"Axios&Ajax","lang":"zh-CN","frontmatter":{"icon":"note","date":"2022-12-17T00:00:00.000Z","category":["ajax"],"tag":["红","小","圆"]},"headers":[{"level":2,"title":"Axios请求传递请求头","slug":"axios请求传递请求头","link":"#axios请求传递请求头","children":[]},{"level":2,"title":"跨域问题","slug":"跨域问题","link":"#跨域问题","children":[]}],"git":{"createdTime":1671200475000,"updatedTime":1671200475000,"contributors":[{"name":"deng","email":"‘1253850932@qq.com’","commits":1}]},"readingTime":{"minutes":0.43,"words":129},"filePathRelative":"note/ajax/1.md","localizedDate":"2022年12月17日","excerpt":"<h1> Axios&amp;Ajax</h1>\\n<h2> Axios请求传递请求头</h2>\\n<blockquote store.state.user.authorization=\\"\\">\\n<p>config.headers['Authorization'] = Bearer $</p>\\n</blockquote>\\n<p>在<code>request.js</code>中</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>\\t<span class=\\"token comment\\">// 请求前的统一处理 拦截请求函数</span>\\n\\tinstance<span class=\\"token punctuation\\">.</span>interceptors<span class=\\"token punctuation\\">.</span>request<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>\\n\\t\\t<span class=\\"token parameter\\">config</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token comment\\">// JWT鉴权处理</span>\\n\\t\\t\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>store<span class=\\"token punctuation\\">.</span>state<span class=\\"token punctuation\\">.</span>user<span class=\\"token punctuation\\">.</span>authorization<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t\\tconfig<span class=\\"token punctuation\\">.</span>headers<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'Authorization'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">Bearer </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>store<span class=\\"token punctuation\\">.</span>state<span class=\\"token punctuation\\">.</span>user<span class=\\"token punctuation\\">.</span>authorization<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">\`</span></span>\\n\\t\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t\\t\\t<span class=\\"token keyword\\">return</span> config\\n\\t\\t<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t<span class=\\"token parameter\\">error</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\tconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>error<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// for debug</span>\\n\\t\\t\\t<span class=\\"token keyword\\">return</span> Promise<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reject</span><span class=\\"token punctuation\\">(</span>error<span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
